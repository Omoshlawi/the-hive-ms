// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../dist/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String   @id @default(uuid()) @db.Uuid
  userId            String   @db.Uuid
  type              String
  provider          String
  providerAccountId String   @default(cuid())
  refresh_token     String?  @db.Text
  refresh_expire_at Int?
  access_token      String?  @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  voided            Boolean  @default(false)
  id_token          String?  @db.Text
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([type, providerAccountId])
}

model User {
  id              String     @id @default(uuid()) @db.Uuid
  username        String     @unique
  profileUpdated  Boolean    @default(false)
  accountVerified DateTime?
  voided          Boolean    @default(false)
  isAdmin         Boolean    @default(false)
  password        String
  lastLogin       DateTime?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  person          Person?
  auditLogs       AuditLog[]
  accounts        Account[]
}

// Represent Human
model Person {
  id          String   @id @default(uuid()) @db.Uuid
  firstName   String?
  lastName    String?
  surname     String?
  userId      String?  @unique @db.Uuid
  avatarUrl   String?
  phoneNumber String   @unique
  email       String   @unique
  gender      Gender   @default(Unknown)
  user        User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  voided      Boolean  @default(false)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

enum Gender {
  Male
  Female
  Unknown
}

model AuditLog {
  id        String   @id @default(uuid()) @db.Uuid
  userId    String   @db.Uuid
  user      User     @relation(fields: [userId], references: [id])
  action    String
  entity    String
  entityId  String
  details   Json
  createdAt DateTime @default(now())
}
