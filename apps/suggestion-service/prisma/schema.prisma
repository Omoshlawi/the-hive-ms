// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../dist/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model IconFamily {
  id        String   @id @default(uuid()) @db.Uuid
  family    String   @unique
  voided    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  icons     Icon[]
}

model Icon {
  id        String     @id @default(uuid()) @db.Uuid
  familyId  String     @db.Uuid
  family    IconFamily @relation(fields: [familyId], onDelete: Cascade, references: [id])
  name      String
  voided    Boolean    @default(false)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@unique([familyId, name])
}

model County {
  code     String  @id @unique
  name     String
  capital  String?
  metadata Json?

  voided      Boolean     @default(false)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  subCounties SubCounty[]
  wards       Ward[]

  @@index([code, name])
}

model SubCounty {
  code String @id @unique
  name String

  countyCode String
  county     County @relation(fields: [countyCode], references: [code], onDelete: Cascade)
  metadata   Json?

  voided    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  wards     Ward[]

  @@index([countyCode, name])
}

model Ward {
  code String @id @unique
  name String

  countyCode    String
  county        County    @relation(fields: [countyCode], references: [code], onDelete: Cascade)
  subCountyCode String
  subCounty     SubCounty @relation(fields: [subCountyCode], references: [code], onDelete: Cascade)
  metadata      Json?

  voided    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([subCountyCode, name])
}

model Address {
  id          String  @id @default(uuid()) @db.Uuid
  name        String
  description String?
  country     String  @default("Kenya")
  county      String
  subCounty   String
  ward        String
  village     String?

  landmark   String // For non-standard addresses
  postalCode String?
  latitude   Decimal?
  longitude  Decimal?

  // Ownership

  // user address
  ownerUserId    String?
  ownerUser      Json?
  // organization saved addresses
  organizationId String?
  organization   Json?

  // Geographical coordinates
  metadata Json? // Flexible field for additional data like:
  // - boundingBox
  // - elevation
  // - timezone
  // - administrative areas
  // - place_id (for external mapping services)
  // - formatted_address

  // Standard tracking fields
  createdBy String  @db.Uuid // User ID of creator
  voided    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([country])
}
