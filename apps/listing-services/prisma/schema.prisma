generator client {
  provider = "prisma-client-js"
  output   = "../dist/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ListingType {
  SALE
  RENT
  LEASE
  AUCTION
  HOLIDAY_RENTAL
  COMMERCIAL_LEASE
  TIME_SHARE
  SHORT_TERM_STAY
  RENT_TO_OWN
  CO_LIVING
}

enum ListingStatus {
  DRAFT
  ACTIVE
  UNDER_CONTRACT
  SOLD
  LEASED
  RENTED
  WITHDRAWN
  EXPIRED
}

enum ListingMediaType {
  IMAGE
  VIDEO
  DOCUMENT
  VIRTUAL_TOUR
  FLOOR_PLAN
  TERMS_AND_CONDITIONS
  AGREEMENT
  POLICY
  OTHER
}

model ListingMedia {
  id        String  @id @default(uuid()) @db.Uuid
  listingId String  @db.Uuid
  listing   Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)

  type        ListingMediaType
  title       String
  description String?          @db.Text
  url         String // URL to stored media
  metadata    Json? // Flexible metadata storage for file info, version, language, etc.
  order       Int              @default(0)

  // Tracking
  voided    Boolean  @default(false)
  createdBy String   @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([listingId, type])
}

model Listing {
  id             String        @id @default(uuid()) @db.Uuid
  propertyId     String        @db.Uuid
  organizationId String        @db.Uuid
  type           ListingType
  status         ListingStatus @default(DRAFT)
  title          String
  description    String?       @db.Text

  // Common fields for all listing types
  price      Decimal   @db.Decimal(12, 2)
  currency   String    @default("KES")
  listedDate DateTime  @default(now())
  expiryDate DateTime?
  featured   Boolean   @default(false)

  // Type-specific details stored in related models
  saleDetails      SaleListing?
  rentalDetails    RentalListing?
  leaseDetails     LeaseListing?
  auctionDetails   AuctionListing?
  shortTermDetails ShortTermListing?
  rentToOwnDetails RentToOwnListing?
  coLivingDetails  CoLivingListing?

  // lISTING media
  ListingMedia ListingMedia[]

  contactPersonId String @db.Uuid
  contactPerson   Json? // Minimal person info

  // Metadata
  metadata  Json? // For flexible additional data
  views     Int      @default(0)
  createdBy String   @db.Uuid
  voided    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SaleListing {
  id        String  @id @db.Uuid
  listingId String  @unique @db.Uuid
  listing   Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)

  // Sale-specific fields
  downPayment       Decimal? @db.Decimal(12, 2)
  mortgageAvailable Boolean  @default(false)
  priceNegotiable   Boolean  @default(false)
  ownershipType     String? // e.g., Freehold, Leasehold
  titleDeedReady    Boolean  @default(false)

  // Financing options
  financingOptions Json? // Array of accepted financing methods

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RentalListing {
  id        String  @id @db.Uuid
  listingId String  @unique @db.Uuid
  listing   Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)

  // Rental-specific fields
  rentPeriod          String // Monthly, Weekly, Daily
  minimumRentalPeriod Int // Number of periods
  securityDeposit     Decimal  @db.Decimal(12, 2)
  petsAllowed         Boolean  @default(false)
  furnished           Boolean  @default(false)
  utilities           String[] @default([]) // Array of included utilities
  availableFrom       DateTime

  // Additional charges
  additionalCharges Json? // Array of {description, amount, frequency}

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model LeaseListing {
  id      String  @id @db.Uuid
  listing Listing @relation(fields: [id], references: [id], onDelete: Cascade)

  // Lease-specific fields
  leaseTerm        Int // Duration in months
  securityDeposit  Decimal  @db.Decimal(12, 2)
  maintenanceTerms String?  @db.Text
  renewalOptions   Json? // Renewal terms and conditions e.g {"renewalAllowed": true, "increaseRate": 0.05, "maxRenewals": 2}
  allowedUses      String[] @default([]) // Array of permitted property uses e.g ["Retail", "Office", "Medical Clinic"]

  // Commercial-specific
  isCommercial      Boolean  @default(false)
  buildOutAllowance Decimal? @db.Decimal(12, 2) // Amount landlord contributes toward renovations or interior changes.

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AuctionListing {
  id      String  @id @db.Uuid
  listing Listing @relation(fields: [id], references: [id], onDelete: Cascade)

  // Auction-specific fields
  startingBid     Decimal  @db.Decimal(12, 2) // is the lowest possible bid a buyer can place.
  reservePrice    Decimal? @db.Decimal(12, 2) // the minimum amount the seller is willing to accept.
  bidIncrement    Decimal  @db.Decimal(12, 2) // // Minimum increase per bid
  auctionStart    DateTime
  auctionEnd      DateTime
  preRegistration Boolean  @default(false) // Require bidder registration?
  bidderApproval  Boolean  @default(false) // Require approval before bidding?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ShortTermListing {
  id        String  @id @db.Uuid
  listingId String  @unique @db.Uuid
  listing   Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)

  // Short-term specific fields
  minimumStay     Int // Minimum nights
  maximumStay     Int? // Maximum nights allowed
  basePrice       Decimal  @db.Decimal(12, 2) // Per night price
  weeklyDiscount  Decimal? @db.Decimal(5, 2) // Percentage
  monthlyDiscount Decimal? @db.Decimal(5, 2) // Percentage
  cleaningFee     Decimal? @db.Decimal(12, 2)
  securityDeposit Decimal  @db.Decimal(12, 2)

  // Services and amenities
  selfCheckIn          Boolean @default(false)
  housekeeping         Boolean @default(false)
  housekeepingInterval Int? // Days between cleaning
  breakfast            Boolean @default(false)

  // House rules
  quietHours     Json? // Array of {start, end} times
  partiesAllowed Boolean @default(false)
  smokingAllowed Boolean @default(false)

  // Calendar
  availabilityCalendar Json? // Blocked dates and special pricing
  checkInTime          String? // Default check-in time
  checkOutTime         String? // Default check-out time

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RentToOwnListing {
  id        String  @id @db.Uuid
  listingId String  @unique @db.Uuid
  listing   Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)

  // Rent-to-own specific fields
  totalPurchasePrice Decimal @db.Decimal(12, 2)
  monthlyRent        Decimal @db.Decimal(12, 2)
  rentCredits        Decimal @db.Decimal(12, 2) // Amount of rent that goes to purchase
  optionFee          Decimal @db.Decimal(12, 2) // Initial fee for the option to buy
  optionPeriod       Int // Months until option expires

  // Purchase terms
  requiredDownPayment Decimal @db.Decimal(12, 2)
  maintenanceTerms    String? @db.Text
  purchaseTerms       String? @db.Text

  // Financial requirements
  minimumIncome       Decimal? @db.Decimal(12, 2)
  creditScoreRequired Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CoLivingListing {
  id        String @id @db.Uuid
  listingId String @unique @db.Uuid

  listing Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)

  // Room and space details
  roomType         String // Private, Shared, Studio
  totalOccupancy   Int // Maximum number of residents
  currentOccupancy Int // Current number of residents
  privateSpace     Decimal @db.Decimal(8, 2) // Square footage/meters of private space
  sharedSpace      Decimal @db.Decimal(8, 2) // Square footage/meters of shared space

  // Community features
  communityAmenities Json? // Array of shared amenities
  communityEvents    Boolean @default(false)
  coworkingSpace     Boolean @default(false)

  // Living arrangements
  minimumStay      Int // Minimum months
  genderPreference String? // Male, Female, Any
  ageRange         Json? // {min, max} age preferences
  occupation       String? // Student, Professional, Any

  // House rules and culture
  houseCleaning       Json? // Cleaning schedule/responsibilities
  guestPolicy         String? // Guest rules and restrictions
  quietHours          Json? // Array of {start, end} times
  communityGuidelines String? @db.Text

  // Financial
  securityDeposit   Decimal @db.Decimal(12, 2)
  utilitiesIncluded Json? // Array of included utilities
  additionalFees    Json? // Array of {description, amount, frequency}

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
